#+AUTHOR: Krzysztof Walkiewicz
#+STARTUP: showall
#+LANGUAGE: en
#+TITLE: Useful git notes

* Synchronize with remote
git reset --hard HEAD && git clean -f -x -d -n && git clean -f -x -d && git pull

* Add to gitignore previously tracked file
- git rm --cached name_of_file

* Force to overwrite local changes on pul
- git fetch --all
- git reset --hard origin/master

* To permanently accept a specific certificate

try passing -c to git with the proper config variable

#+begin_src sh
git -c http.sslVerify=false clone https://example.com/path/to/git
#+end_src sh

To disable SSL verification for a specific repository

If the repository is completely under your control, you can try:

#+begin_src sh
git config http.sslVerify false
#+end_src

- Examples:

#+begin_src sh
git -c http.sslVerify=false clone https://some_server/some_repo.git
#+end_src sh

* Checkout a new remote branch (that exists only on the remote, but not locally)

- git fetch origin
- git checkout --track origin/<remote_branch_name>

* Number of commits per authon on all branches

git shortlog -s -n --all --no-merges

* Git aliases

#+begin_src sh
[alias]
	clone-branches = "! git branch -a | sed -n \"/\\/HEAD /d; /\\/master$/d; /remotes/p;\" | xargs -L1 git checkout -t"
	show-tracked = "! git log --pretty=format: --name-only --diff-filter=A | sort - | sed '/^$/d'"
	authors = "! git shortlog -s -n --all --no-merges"
#+end_src

* Whole gitconfig

#+begin_src sh
[user]
	email = walkiewicz_krzysztof@o2.pl
	name = Krzysztof Walkiewicz

[core]
	editor = vim
	filemode = false
	pager = diff-so-fancy | less --tabs=4 -RFX
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[alias]
	clone-branches = "! git branch -a | sed -n \"/\\/HEAD /d; /\\/master$/d; /remotes/p;\" | xargs -L1 git checkout -t"
	show-tracked = "! git log --pretty=format: --name-only --diff-filter=A | sort - | sed '/^$/d'"
	authors = "! git shortlog -s -n --all --no-merges"
	who-branch = "!git for-each-ref --format='%(committerdate) %09 %(authorname) %09 %(refname)' --sort=committerdate"
#+end_src

* Cleanup local branches if merged to remote

#+begin_src sh
git remote prune origin --dry-run
git remote prune origin
git branch -vv | grep gone | awk '{print $1}' | xargs git branch -d
#+end_src


* Showing which files has changed between two branches

git diff --name-status develop-datalake-phase-two develop .
